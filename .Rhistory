group_by(month) %>%
count(mort30)
surgery %>%
group_by(month) %>%
count(mort30) %>%
pivot_wider(names_from = mort30, values_from = n)
surgery %>%
group_by(month) %>%
count(mort30) %>%
pivot_wider(names_from = mort30, values_from = n) %>%
arrange(month)
surgery %>%
group_by(month) %>%
count(mort30) %>%
pivot_wider(names_from = mort30, values_from = n) %>%
arrange(month)
surgery %>%
group_by(month) %>%
count(mort30) %>%
pivot_wider(names_from = mort30, values_from = n) %>%
arrange(No)
surgery %>%
group_by(month) %>%
count(mort30) %>%
pivot_wider(names_from = mort30, values_from = n) %>%
arrange(-No)
surgery %>%
group_by(month) %>%
count(mort30, complication) %>%
pivot_wider(names_from = mort30, values_from = n) %>%
arrange(-No)
surgery %>%
group_by(month) %>%
count(mort30, complication) %>%
pivot_wider(names_from = mort30, values_from = n) %>%
arrange(-No)
surgery %>%
group_by(month) %>%
count(mort30, complication)
surgery %>%
group_by(month) %>%
count(mort30, complication) %>%
arrange(-n)
surgery %>%
group_by(month) %>%
count(mort30, complication) %>%
ggplot(aes(x=mort30, y=complication, fill=month))
surgery %>%
group_by(month) %>%
count(mort30, complication) %>%
ggplot(aes(x=mort30, y=complication, fill=month))+
geom_col()
surgery %>%
group_by(month) %>%
count(mort30, complication) %>%
ggplot(aes(x=month, y=complication, fill=mort30))+
geom_col()
surgery %>%
group_by(month) %>%
count(mort30, complication) %>%
ggplot(aes(x=month, y=complication, fill=mort30))+
geom_col(position = "dodge")
surgery %>%
group_by(month) %>%
count(mort30, complication) %>%
ggplot(aes(x=month, y=n))+
geom_col()
surgery %>%
group_by(month) %>%
count(mort30, complication) %>%
ggplot(aes(x=month, y=n, fill=mort30))+
geom_col()
surgery %>%
group_by(month) %>%
count(mort30, complication) %>%
ggplot(aes(x=month, y=n, fill=complication))+
geom_col()
surgery %>%
group_by(month) %>%
count(mort30, complication) %>%
ggplot(aes(x=month, y=n, fill=mort30))+
geom_col()
surgery %>%
group_by(month) %>%
count(mort30, complication) %>%
ggplot(aes(x=month, y=n, fill=mort30))+
geom_col(position = "dodge")
surgery %>%
group_by(month) %>%
count(mort30, complication) %>%
ggplot(aes(x=month, y=n, fill=mort30))+
geom_col()
surgery %>%
mutate(as.factor(month)) %>%
group_by(month) %>%
count(mort30, complication) %>%
ggplot(aes(x=month, y=n, fill=mort30))+
geom_col()
surgery %>%
mutate(month=as.factor(month)) %>%
group_by(month) %>%
count(mort30, complication) %>%
ggplot(aes(x=month, y=n, fill=mort30))+
geom_col()
surgery %>%
mutate(month=as.factor(month)) %>%
group_by(month) %>%
count(mort30, complication) %>%
ggplot(aes(x=month, y=n, fill=mort30))+
geom_col()
surgery %>%
group_by(month) %>%
count(mort30, complication) %>%
ggplot(aes(x=month, y=n, fill=mort30))+
geom_col()
surgery_new <- surgery %>%
mutate(mort30_n = ifelse(mort30 == "Yes", 1, 0),
complication_n = ifelse(complication =="Yes", 1, 0)) %>%
group_by(month) %>%
summarise(n_deaths=sum(mort30_n),
n_comp=sum(complication_n))
surgery_new
surgery %>% tabyl(month, mort30)
surgery %>% tabyl(month, complication)
surgery_new %>%
ggplot(aes(x=month, y=n_deaths))+
geom_col(alpha=0.8, fill="steelblue", color="black")+
labs(title="30-Day Mortality by Month",
x=NULL,
y="Rate")+
scale_x_discrete(limits=c("Jan","Feb","Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))+
theme_light()
surgery %>%
ggplot(aes(x=ahrq_ccs, y=ccsmort30rate, group=ahrq_ccs))+
geom_col(position="dodge", fill="steelblue", alpha=0.6)+
coord_flip()+
labs(title="30-Day Mortality by Procedure",
x=NULL,
y="Rate")+
theme_light()
surgery %>%
group_by(ahrq_ccs) %>%
summarise(ccsmort30rate=mean(ccsmort30rate)) %>%
arrange(desc(ccsmort30rate)) %>%
slice_max(ccsmort30rate, n=5)
surgery %>%
group_by(ahrq_ccs) %>%
summarise(ccscomplicationrate=mean(ccscomplicationrate)) %>%
arrange(desc(ccscomplicationrate)) %>%
slice_max(ccscomplicationrate, n=5)
surgery %>%
select(ahrq_ccs, ccsmort30rate, ccscomplicationrate) %>%
filter(ahrq_ccs %in% c("Colorectal resection", "Small bowel resection", "Gastrectomy; partial and total", "Endoscopy and endoscopic biopsy of the urinary tract", "Spinal fusion", "Nephrectomy; partial or complete")) %>%
group_by(ahrq_ccs) %>%
summarise(ccsmort30rate=mean(ccsmort30rate),
ccscomplicationrate=mean(ccscomplicationrate))
surgery %>%
ggplot(aes(x=bmi))+
geom_density(fill="steelblue", color="black", alpha=0.6, na.rm=T)+
facet_wrap(~asa_status)+
labs(title="Distribution of BMI", x="BMI", y=NULL)+
theme_light()
surgery %>%
filter(asa_status!="NA") %>%
ggplot(aes(x=asa_status, fill=asa_status))+
geom_bar(color="black", alpha=0.6)+
labs(title="ASA Status of Participants", x="ASA", y="# Participants")+
theme_light()
surgery %>%
filter(gender!="NA") %>%
ggplot(aes(x=gender, y=age, fill=gender))+
geom_boxplot(na.rm=T, alpha=0.6)+
labs(title="Range of Participants' Age by Gender",
x=NULL,
y="Age (years)")+
theme_light()
surgery %>%
filter(gender!="NA") %>%
group_by(gender) %>%
summarize(mean_age=mean(age, na.rm=T))
surgery %>%
ggplot(aes(x=race, fill=race))+
geom_bar(alpha=0.6, color="black")+
labs(title="Participants by Race",
x=NULL,
y="# participants")+
theme_light()
surgery %>%
filter(gender!="NA" & race!="NA") %>%
group_by(gender) %>%
summarise(mean_age=mean(age, na.rm = T), .groups = "keep")
surgery %>%
filter(asa_status!="NA" & race!="NA") %>%
group_by(race) %>%
count(asa_status) %>%
ggplot(aes(x=race, y=n, fill=asa_status))+
geom_col()+
theme_classic()+
theme(legend.position = "left")+
labs(title = "Physical Health of Participants Catogarized by Status",
x = "Race",
y= "Number")
surgery %>%
group_by(month) %>%
count(mort30, complication) %>%
arrange(-n)
surgery %>%
group_by(month) %>%
count(mort30, complication) %>%
arrange(n)
knitr::opts_chunk$set(echo = TRUE)
wolves_map <- get_stadiamap(bbox, maptype = "stamen_terrain_lines", zoom=7)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(ggmap)
register_stadiamaps("5b0684fa-5bdb-4a98-8018-e4559ac9f52f", write = FALSE)
grizzly <- read_csv("data/bear-sightings.csv")
wolves <- read_csv("data/wolves_data/wolves_dataset.csv")
glimpse(grizzly)
names(grizzly)
summary(grizzly)
lat <- c(55.02, 70.37)
long <- c(-166.2, -131.3)
bbox <- make_bbox(long, lat, f = 0.03)
grizzly_map <- get_stadiamap(bbox, maptype = "stamen_terrain", zoom=7)
ggmap(grizzly_map)
ggmap(grizzly_map)+
geom_point(data = grizzly, aes(x=longitude, y=latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Grizzly Bears in Alaska")
glimpse(wolves)
names(wolves)
wolves_pop <- wolves %>%
count(pop)
wolves %>%
select(lat, long) %>%
summary()
lat <- c(33.89, 80.50)
long <- c(-157.84, -82.42)
bbox <- make_bbox(long, lat, f = 0.03)
wolves_map <- get_stadiamap(bbox, maptype = "stamen_terrain_lines", zoom=7)
wolves_map <- get_stadiamap(bbox, maptype = "stamen_terrain_lines", zoom=7)
ggmap(wolves_map)
wolves_map <- get_stadiamap(bbox, maptype = "stamen_terrain_lines", zoom=7)
wolves_map <- get_stadiamap(bbox, maptype = "stamen_terrain_lines", zoom=7)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(ggmap)
register_stadiamaps("5b0684fa-5bdb-4a98-8018-e4559ac9f52f", write = FALSE)
grizzly <- read_csv("data/bear-sightings.csv")
wolves <- read_csv("data/wolves_data/wolves_dataset.csv")
glimpse(grizzly)
names(grizzly)
summary(grizzly)
lat <- c(55.02, 70.37)
long <- c(-166.2, -131.3)
bbox <- make_bbox(long, lat, f = 0.03)
grizzly_map <- get_stadiamap(bbox, maptype = "stamen_terrain", zoom=7)
ggmap(grizzly_map)
ggmap(grizzly_map)+
geom_point(data = grizzly, aes(x=longitude, y=latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Grizzly Bears in Alaska")
glimpse(wolves)
names(wolves)
wolves_pop <- wolves %>%
count(pop)
wolves %>%
select(lat, long) %>%
summary()
lat <- c(33.89, 80.50)
long <- c(-157.84, -82.42)
bbox <- make_bbox(long, lat, f = 0.03)
wolves_map <- get_stadiamap(bbox, maptype = "stamen_terrain_lines", zoom=7)
ggmap(wolves_map)
ggmap(wolves_map)+
geom_point(data = wolves, aes(x=long, y=lat), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Wolves in 48 States")
ggmap(wolves_map)+
geom_point(data = wolves, aes(x=long, y=lat, color=pop), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Wolves in 48 States")
wolves_map <- get_stadiamap(bbox2, maptype = "stamen_terrain_lines", zoom=5)
wolves_map <- get_stadiamap(bbox, maptype = "stamen_terrain_lines", zoom=5)
wolves_map <- get_stadiamap(bbox, maptype = "stamen_terrain_lines", zoom=5)
ggmap(wolves_map)
ggmap(wolves_map)+
geom_point(data = wolves, aes(x=long, y=lat), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Wolves in 48 States")
View(wolves)
wolves_pop <- wolves %>%
count(pop) %>%
filter(pop=="MT", "YNP", "GTNP", "SNF", "MI")
wolves_pop <- wolves %>%
count(pop) %>%
filter(pop=="MT" & "YNP" & "GTNP" & "SNF" & "MI")
wolves_pop <- wolves %>%
count(pop) %>%
filter(pop %in% c("MT", "YNP", "GTNP", "SNF", "MI"))
wolves_pop <- wolves %>%
count(pop) %>%
filter(pop %in% c("MT", "YNP", "GTNP", "SNF", "MI"))
wolves %>%
count(pop) %>%
filter(pop %in% c("MT", "YNP", "GTNP", "SNF", "MI"))
wolves %>%
filter(pop %in% c("MT", "YNP", "GTNP", "SNF", "MI"))
wolves_pop %>%
select(lat, long) %>%
summary()
wolves_pop <- wolves %>%
select(lat, long, pop)
wolves_pop <- wolves %>%
select(lat, long, pop) %>%
filter(pop %in% c("MT", "YNP", "GTNP", "SNF", "MI"))
wolves_pop %>%
select(lat, long) %>%
summary()
lat <- c(33.89, 80.50)
long <- c(-157.84, -82.42)
bbox <- make_bbox(long, lat, f = 0.03)
wolves_map <- get_stadiamap(bbox, maptype = "stamen_terrain_lines", zoom=5)
lat <- c(43.82, 47.75)
long <- c(-110.75, -86.82)
bbox <- make_bbox(long, lat, f = 0.03)
wolves_map <- get_stadiamap(bbox, maptype = "stamen_terrain_lines", zoom=5)
ggmap(wolves_map)
ggmap(wolves_map)+
geom_point(data = wolves_pop, aes(x=long, y=lat), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Wolves in 48 States")
ggmap(wolves_map)+
geom_point(data = wolves, aes(x=long, y=lat, color=pop), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Wolves in 48 States")
ggmap(wolves_map)+
geom_point(data = wolves, aes(x=long, y=lat, color=pop), size=1) +
labs(x= "Longitude", y= "Latitude", title="Wolves in 48 States")
ggmap(wolves_map)+
geom_point(data = wolves_pop, aes(x=long, y=lat), size=2) +
labs(x= "Longitude", y= "Latitude", title="Wolves in 48 States")
ggmap(wolves_map)+
geom_point(data = wolves, aes(x=long, y=lat, color=pop), size=2) +
labs(x= "Longitude", y= "Latitude", title="Wolves in 48 States")
knitr::opts_chunk$set(echo = TRUE)
grizzly_map <- get_stadiamap(bbox, maptype = "stamen_terrain", zoom=7)
grizzly_map <- get_stadiamap(bbox, maptype = "stamen_terrain", zoom=7)
grizzly_map <- get_stadiamap(bbox, maptype = "stamen_terrain", zoom=7)
grizzly_map <- get_stadiamap(bbox, maptype = "stamen_terrain", zoom=7)
register_stadiamaps("5b0684fa-5bdb-4a98-8018-e4559ac9f52f", write = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(ggmap)
register_stadiamaps("5b0684fa-5bdb-4a98-8018-e4559ac9f52f", write = FALSE)
grizzly <- read_csv("data/bear-sightings.csv")
wolves <- read_csv("data/wolves_data/wolves_dataset.csv")
glimpse(grizzly)
names(grizzly)
summary(grizzly)
lat <- c(55.02, 70.37)
long <- c(-166.2, -131.3)
bbox <- make_bbox(long, lat, f = 0.03)
grizzly_map <- get_stadiamap(bbox, maptype = "stamen_terrain", zoom=7)
ggmap(grizzly_map)
ggmap(grizzly_map)+
geom_point(data = grizzly, aes(x=longitude, y=latitude), size=0.4) +
labs(x= "Longitude", y= "Latitude", title="Grizzly Bears in Alaska")
glimpse(wolves)
names(wolves)
wolves_pop <- wolves %>%
select(lat, long, pop) %>%
filter(pop %in% c("MT", "YNP", "GTNP", "SNF", "MI"))
wolves_pop %>%
select(lat, long) %>%
summary()
lat <- c(43.82, 47.75)
long <- c(-110.75, -86.82)
bbox <- make_bbox(long, lat, f = 0.03)
wolves_map <- get_stadiamap(bbox, maptype = "stamen_terrain_lines", zoom=5)
ggmap(wolves_map)
ggmap(wolves_map)+
geom_point(data = wolves_pop, aes(x=long, y=lat), size=2) +
labs(x= "Longitude", y= "Latitude", title="Wolves in 48 States")
ggmap(wolves_map)+
geom_point(data = wolves, aes(x=long, y=lat, color=pop), size=2) +
labs(x= "Longitude", y= "Latitude", title="Wolves in 48 States")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
library(shinydashboard)
library(naniar)
library(janitor)
UC_admit <- read_csv("data/UC_admit.csv") %>% clean_names()
glimpse(UC_admit)
names(UC_admit)
dim(UC_admit)
miss_var_summary(UC_admit)
UC_admit %>%
ggplot(aes(x=ethnicity))+
geom_bar()
library(shiny)
ui <- dashboardPage(
dashboardHeader(title="UC Admissions"),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("x", "UC Campus", choices= unique(UC_admit$campus)), hr(),
selectInput("y", "Year", choices= unique(UC_admit$academic_yr)), hr(),
selectInput("z", "Category", choices= unique(UC_admit$category)), hr(),
plotOutput("plot", width = "600px", height = "400px")))
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x=input$x, y=input$y))+
geom_col()
})
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title="UC Admissions"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(width=3,
#selectInput("x", "Ethnicity", unique(UC_admit$Ethnicity)), hr()),
#box(width=3,
selectInput("x", "UC Campus", unique(UC_admit$campus)), hr()),
box(width=3,
selectInput("y", "Year", unique(UC_admit$academic_yr)), hr()),
box(width = 8,
plotOutput("plot", width = "600px", height = "400px")))))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>%
filter(category=="Admits") %>%
group_by(academic_yr) %>%
ggplot(aes(x=ethnicity, y=filtered_count_fr))+
geom_col()
})}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title="UC Admissions"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(width=3,
selectInput("x", "UC Campus", unique(UC_admit$campus)), hr()),
box(width=3,
selectInput("y", "Year", unique(UC_admit$academic_yr)), hr()),
box(width = 8,
plotOutput("plot", width = "600px", height = "400px")))))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>%
filter(category=="Admits") %>%
group_by(academic_yr) %>%
ggplot(aes(x=ethnicity, y=filtered_count_fr))+
geom_col()
})}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title="UC Admissions"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(width=3,
selectInput("x", "UC Campus", unique(UC_admit$campus)), hr()),
box(width=3,
selectInput("y", "Ethnicity", unique(UC_admit$Ethnicity)), hr()),
box(width=3,
selectInput("z", "Year", unique(UC_admit$academic_yr)), hr()),
box(width = 8,
plotOutput("plot", width = "600px", height = "400px")))))
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>%
filter(category=="Admits") %>%
group_by(academic_yr) %>%
ggplot(aes(x=ethnicity, y=filtered_count_fr))+
geom_col()
})}
shinyApp(ui, server)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidyverse)
library(janitor)
library(dplyr)
library(tidyverse)
library(janitor)
library(dplyr)
blood_count <- read_csv("data/blood_count.csv")
library(tidyverse)
library(janitor)
library(dplyr)
setwd("/Users/lejla.becirevic/Desktop/BIS15W2024_Group10")
knitr::opts_chunk$set(echo = TRUE)
spotify <- split_spotify2023 %>%
separate(album_release_date, into = c("year", "month", "day"), sep = "-")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(naniar)
library(tidyr)
spotify2023 <- read_csv("top_50_2023.csv") %>% clean_names()
library(tidyverse)
library(janitor)
library(naniar)
library(tidyr)
spotify2023 <- read_csv("top_50_2023.csv") %>% clean_names()
setwd("/Users/lejla.becirevic/Desktop/BIS15W2024_Group10")
